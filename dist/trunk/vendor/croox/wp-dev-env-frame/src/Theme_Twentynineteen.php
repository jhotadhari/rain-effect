<?php
/**
 * Theme_Twentynineteen
 *
 * @package wde
 */

namespace croox\wde;

// If this file is called directly, abort.
if ( ! defined( 'WPINC' ) ) {
	die;
}


/**
 * Theme_Twentynineteen
 *
 * Inintiates a Theme based on WordPress Twentynineteen https://github.com/WordPress/twentynineteen
 * Other themefiles are generated by generator-wp-dev-env
 *
 */
abstract class Theme_Twentynineteen extends Theme {

	public function hooks(){
        parent::hooks();

		add_action( 'after_setup_theme', array( $this, 'content_width' ), 0 );
		add_action( 'wp_print_footer_scripts', array( $this, 'skip_link_focus_fix' ), 10 );
		add_action( 'enqueue_block_editor_assets', array( $this, 'editor_customizer_styles' ), 10 );
		add_action( 'wp_head', array( $this, 'colors_css_wrap' ), 10 );
		add_action( 'after_setup_theme', array( $this, 'setup' ), 10 );
	}

	/**
	 * Set the content width in pixels, based on the theme's design and stylesheet.
	 *
	 * Priority 0 to make it available to lower priority callbacks.
	 *
	 * @global int $content_width Content width.
	 */
	public function content_width() {
		// This variable is intended to be overruled from themes.
		// Open WPCS issue: {@link https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/1043}.
		// phpcs:ignore WordPress.NamingConventions.PrefixAllGlobals.NonPrefixedVariableFound
		$GLOBALS['content_width'] = apply_filters( $this->prefix . '_content_width', 640 );
	}

	/**
	 * Enqueue frontend styles.
	 */
	public function enqueue_styles(){
        parent::enqueue_styles();

		wp_enqueue_style( $this->prefix . '-print-style', $this->dir_url . '/css/print.min.css', array(), wp_get_theme()->get( 'Version' ), 'print' );
	}

	/**
	 * Enqueue frontend scripts
	 */
	public function enqueue_scripts(){
        parent::enqueue_scripts();

		if ( has_nav_menu( 'menu-1' ) ) {
			wp_enqueue_script( $this->prefix . '-priority-menu', $this->dir_url . '/js/priority_menu.min.js', array(), '1.1', true );
			wp_enqueue_script( $this->prefix . '-touch-navigation', $this->dir_url . '/js/touch_keyboard_navigation.min.js', array(), '1.1', true );
		}
	}

	/**
	 * Fix skip link focus in IE11.
	 *
	 * This does not enqueue the script because it is tiny and because it is only for IE11,
	 * thus it does not warrant having an entire dedicated blocking script being loaded.
	 *
	 * @link https://git.io/vWdr2
	 */
	public function skip_link_focus_fix() {
		// The following is minified via `terser --compress --mangle -- js/skip-link-focus-fix.js`.
		?>
		<script>
		/(trident|msie)/i.test(navigator.userAgent)&&document.getElementById&&window.addEventListener&&window.addEventListener("hashchange",function(){var t,e=location.hash.substring(1);/^[A-z0-9_-]+$/.test(e)&&(t=document.getElementById(e))&&(/^(?:a|select|input|button|textarea)$/i.test(t.tagName)||(t.tabIndex=-1),t.focus())},!1);
		</script>
		<?php
	}

	/**
	 * Enqueue supplemental block editor styles.
	 */
	public function editor_customizer_styles() {

		wp_enqueue_style( $this->prefix . '-editor-customizer-styles', $this->dir_url . '/css/style_editor_customizer.min.css', false, '1.1', 'all' );

		if ( 'custom' === get_theme_mod( 'primary_color' ) ) {
			wp_add_inline_style( $this->prefix . '-editor-customizer-styles', $this->custom_colors_css() );
		}
	}

	/**
	 * Display custom color CSS in customizer and on frontend.
	 */
	public function colors_css_wrap() {

		// Only include custom colors in customizer or frontend.
		if ( ( ! is_customize_preview() && 'default' === get_theme_mod( 'primary_color', 'default' ) ) || is_admin() ) {
			return;
		}

		$primary_color = 199;
		if ( 'default' !== get_theme_mod( 'primary_color', 'default' ) ) {
			$primary_color = get_theme_mod( 'primary_color_hue', 199 );
		}
		?>

		<style type="text/css" id="custom-theme-colors" <?php echo is_customize_preview() ? 'data-hue="' . absint( $primary_color ) . '"' : ''; ?>>
			<?php echo $this->custom_colors_css(); ?>
		</style>
		<?php
	}

	/**
	 * Sets up theme defaults and registers support for various WordPress features.
	 *
	 * Note that this function is hooked into the after_setup_theme hook, which
	 * runs before the init hook. The init hook is too late for some features, such
	 * as indicating support for post thumbnails.
	 */
	public function setup() {

		// Add default posts and comments RSS feed links to head.
		add_theme_support( 'automatic-feed-links' );

		/*
		 * Let WordPress manage the document title.
		 * By adding theme support, we declare that this theme does not use a
		 * hard-coded <title> tag in the document head, and expect WordPress to
		 * provide it for us.
		 */
		add_theme_support( 'title-tag' );

		/*
		 * Enable support for Post Thumbnails on posts and pages.
		 *
		 * @link https://developer.wordpress.org/themes/functionality/featured-images-post-thumbnails/
		 */
		add_theme_support( 'post-thumbnails' );
		set_post_thumbnail_size( 1568, 9999 );

		// This theme uses wp_nav_menu() in two locations.
		register_nav_menus(
			array(
				'menu-1' => __( 'Primary', $this->textdomain ),
				'footer' => __( 'Footer Menu', $this->textdomain ),
				'social' => __( 'Social Links Menu', $this->textdomain ),
			)
		);

		/*
		 * Switch default core markup for search form, comment form, and comments
		 * to output valid HTML5.
		 */
		add_theme_support(
			'html5',
			array(
				'search-form',
				'comment-form',
				'comment-list',
				'gallery',
				'caption',
			)
		);

		/**
		 * Add support for core custom logo.
		 *
		 * @link https://codex.wordpress.org/Theme_Logo
		 */
		add_theme_support(
			'custom-logo',
			array(
				'height'      => 190,
				'width'       => 190,
				'flex-width'  => false,
				'flex-height' => false,
			)
		);

		// Add theme support for selective refresh for widgets.
		add_theme_support( 'customize-selective-refresh-widgets' );

		// Add support for Block Styles.
		add_theme_support( 'wp-block-styles' );

		// Add support for full and wide align images.
		add_theme_support( 'align-wide' );

		// Add support for editor styles.
		add_theme_support( 'editor-styles' );

		// Enqueue editor styles.
		add_editor_style( 'style-editor.css' );

		// Add custom editor font sizes.
		add_theme_support(
			'editor-font-sizes',
			array(
				array(
					'name'      => __( 'Small', $this->textdomain ),
					'shortName' => __( 'S', $this->textdomain ),
					'size'      => 19.5,
					'slug'      => 'small',
				),
				array(
					'name'      => __( 'Normal', $this->textdomain ),
					'shortName' => __( 'M', $this->textdomain ),
					'size'      => 22,
					'slug'      => 'normal',
				),
				array(
					'name'      => __( 'Large', $this->textdomain ),
					'shortName' => __( 'L', $this->textdomain ),
					'size'      => 36.5,
					'slug'      => 'large',
				),
				array(
					'name'      => __( 'Huge', $this->textdomain ),
					'shortName' => __( 'XL', $this->textdomain ),
					'size'      => 49.5,
					'slug'      => 'huge',
				),
			)
		);

		// Editor color palette.
		add_theme_support(
			'editor-color-palette',
			array(
				array(
					'name'  => __( 'Primary', $this->textdomain ),
					'slug'  => 'primary',
					'color' => utils\Color::hsl_to_hex( 'default' === get_theme_mod( 'primary_color' ) ? 199 : get_theme_mod( 'primary_color_hue', 199 ), 100, 33 ),
				),
				array(
					'name'  => __( 'Secondary', $this->textdomain ),
					'slug'  => 'secondary',
					'color' => utils\Color::hsl_to_hex( 'default' === get_theme_mod( 'primary_color' ) ? 199 : get_theme_mod( 'primary_color_hue', 199 ), 100, 23 ),
				),
				array(
					'name'  => __( 'Dark Gray', $this->textdomain ),
					'slug'  => 'dark-gray',
					'color' => '#111',
				),
				array(
					'name'  => __( 'Light Gray', $this->textdomain ),
					'slug'  => 'light-gray',
					'color' => '#767676',
				),
				array(
					'name'  => __( 'White', $this->textdomain ),
					'slug'  => 'white',
					'color' => '#FFF',
				),
			)
		);

		// Add support for responsive embedded content.
		add_theme_support( 'responsive-embeds' );
	}

	/**
	 * Generate the CSS for the current primary color.
	 *
	 * @see https://github.com/WordPress/twentynineteen/blob/b604f127c2/inc/color-patterns.php#L13
	 */
	public function custom_colors_css() {

		$primary_color = 199;
		if ( 'default' !== get_theme_mod( 'primary_color', 'default' ) ) {
			$primary_color = absint( get_theme_mod( 'primary_color_hue', 199 ) );
		}

		/**
		 *
		 * @since 0.2.0
		 * @param int $saturation Color saturation level.
		 */
		$saturation = apply_filters( $this->prefix . '_custom_colors_saturation', 100 );
		$saturation = absint( $saturation ) . '%';

		/**
		*
		 * @since 0.2.0
		 * @param int $saturation_selection Selection color saturation level.
		 */
		$saturation_selection = absint( apply_filters( $this->prefix . '_custom_colors_saturation_selection', 50 ) );
		$saturation_selection = $saturation_selection . '%';

		/**
		 * Filter  default lightness level.
		 *
		 * @since 0.2.0
		 * @param int $lightness Color lightness level.
		 */
		$lightness = apply_filters( $this->prefix . '_custom_colors_lightness', 33 );
		$lightness = absint( $lightness ) . '%';

		/**
		 * Filter  default hover lightness level.
		 *
		 * @since 0.2.0
		 * @param int $lightness_hover Hover color lightness level.
		 */
		$lightness_hover = apply_filters( $this->prefix . '_custom_colors_lightness_hover', 23 );
		$lightness_hover = absint( $lightness_hover ) . '%';

		/**
		 * Filter  default selection lightness level.
		 *
		 * @since 0.2.0
		 * @param int $lightness_selection Selection color lightness level.
		 */
		$lightness_selection = apply_filters( $this->prefix . '_custom_colors_lightness_selection', 90 );
		$lightness_selection = absint( $lightness_selection ) . '%';

		$theme_css = '
			/*
			 * Set background for:
			 * - featured image :before
			 * - featured image :before
			 * - post thumbmail :before
			 * - post thumbmail :before
			 * - Submenu
			 * - Sticky Post
			 * - buttons
			 * - WP Block Button
			 * - Blocks
			 */
			.image-filters-enabled .site-header.featured-image .site-featured-image:before,
			.image-filters-enabled .site-header.featured-image .site-featured-image:after,
			.image-filters-enabled .entry .post-thumbnail:before,
			.image-filters-enabled .entry .post-thumbnail:after,
			.main-navigation .sub-menu,
			.sticky-post,
			.entry .entry-content .wp-block-button .wp-block-button__link:not(.has-background),
			.entry .button, button, input[type="button"], input[type="reset"], input[type="submit"],
			.entry .entry-content > .has-primary-background-color,
			.entry .entry-content > *[class^="wp-block-"].has-primary-background-color,
			.entry .entry-content > *[class^="wp-block-"] .has-primary-background-color,
			.entry .entry-content > *[class^="wp-block-"].is-style-solid-color,
			.entry .entry-content > *[class^="wp-block-"].is-style-solid-color.has-primary-background-color,
			.entry .entry-content .wp-block-file .wp-block-file__button {
				background-color: hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness . ' ); /* base: #0073a8; */
			}

			/*
			 * Set Color for:
			 * - all links
			 * - main navigation links
			 * - Post navigation links
			 * - Post entry meta hover
			 * - Post entry header more-link hover
			 * - main navigation svg
			 * - comment navigation
			 * - Comment edit link hover
			 * - Site Footer Link hover
			 * - Widget links
			 */
			a,
			a:visited,
			.main-navigation .main-menu > li,
			.main-navigation ul.main-menu > li > a,
			.post-navigation .post-title,
			.entry .entry-meta a:hover,
			.entry .entry-footer a:hover,
			.entry .entry-content .more-link:hover,
			.main-navigation .main-menu > li > a + svg,
			.comment .comment-metadata > a:hover,
			.comment .comment-metadata .comment-edit-link:hover,
			#colophon .site-info a:hover,
			.widget a,
			.entry .entry-content .wp-block-button.is-style-outline .wp-block-button__link:not(.has-text-color),
			.entry .entry-content > .has-primary-color,
			.entry .entry-content > *[class^="wp-block-"] .has-primary-color,
			.entry .entry-content > *[class^="wp-block-"].is-style-solid-color blockquote.has-primary-color,
			.entry .entry-content > *[class^="wp-block-"].is-style-solid-color blockquote.has-primary-color p {
				color: hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness . ' ); /* base: #0073a8; */
			}

			/*
			 * Set left border color for:
			 * wp block quote
			 */
			blockquote,
			.entry .entry-content blockquote,
			.entry .entry-content .wp-block-quote:not(.is-large),
			.entry .entry-content .wp-block-quote:not(.is-style-large) {
				border-left-color: hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness . ' ); /* base: #0073a8; */
			}

			/*
			 * Set border color for:
			 * :focus
			 */
			input[type="text"]:focus,
			input[type="email"]:focus,
			input[type="url"]:focus,
			input[type="password"]:focus,
			input[type="search"]:focus,
			input[type="number"]:focus,
			input[type="tel"]:focus,
			input[type="range"]:focus,
			input[type="date"]:focus,
			input[type="month"]:focus,
			input[type="week"]:focus,
			input[type="time"]:focus,
			input[type="datetime"]:focus,
			input[type="datetime-local"]:focus,
			input[type="color"]:focus,
			textarea:focus {
				border-color: hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness . ' ); /* base: #0073a8; */
			}

			.gallery-item > div > a:focus {
				box-shadow: 0 0 0 2px hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness . ' ); /* base: #0073a8; */
			}

			/* Hover colors */
			a:hover, a:active,
			.main-navigation .main-menu > li > a:hover,
			.main-navigation .main-menu > li > a:hover + svg,
			.post-navigation .nav-links a:hover,
			.post-navigation .nav-links a:hover .post-title,
			.author-bio .author-description .author-link:hover,
			.entry .entry-content > .has-secondary-color,
			.entry .entry-content > *[class^="wp-block-"] .has-secondary-color,
			.entry .entry-content > *[class^="wp-block-"].is-style-solid-color blockquote.has-secondary-color,
			.entry .entry-content > *[class^="wp-block-"].is-style-solid-color blockquote.has-secondary-color p,
			.comment .comment-author .fn a:hover,
			.comment-reply-link:hover,
			.comment-navigation .nav-previous a:hover,
			.comment-navigation .nav-next a:hover,
			#cancel-comment-reply-link:hover,
			.widget a:hover {
				color: hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness_hover . ' ); /* base: #005177; */
			}

			.main-navigation .sub-menu > li > a:hover,
			.main-navigation .sub-menu > li > a:focus,
			.main-navigation .sub-menu > li > a:hover:after,
			.main-navigation .sub-menu > li > a:focus:after,
			.main-navigation .sub-menu > li > .menu-item-link-return:hover,
			.main-navigation .sub-menu > li > .menu-item-link-return:focus,
			.main-navigation .sub-menu > li > a:not(.submenu-expand):hover,
			.main-navigation .sub-menu > li > a:not(.submenu-expand):focus,
			.entry .entry-content > .has-secondary-background-color,
			.entry .entry-content > *[class^="wp-block-"].has-secondary-background-color,
			.entry .entry-content > *[class^="wp-block-"] .has-secondary-background-color,
			.entry .entry-content > *[class^="wp-block-"].is-style-solid-color.has-secondary-background-color {
				background-color: hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness_hover . ' ); /* base: #005177; */
			}

			/* Text selection colors */
			::selection {
				background-color: hsl( ' . $primary_color . ', ' . $saturation_selection . ', ' . $lightness_selection . ' ); /* base: #005177; */
			}
			::-moz-selection {
				background-color: hsl( ' . $primary_color . ', ' . $saturation_selection . ', ' . $lightness_selection . ' ); /* base: #005177; */
			}';

		$editor_css = '
			/*
			 * Set colors for:
			 * - links
			 * - blockquote
			 * - pullquote (solid color)
			 * - buttons
			 */
			.editor-block-list__layout .editor-block-list__block a,
			.editor-block-list__layout .editor-block-list__block .wp-block-button.is-style-outline .wp-block-button__link:not(.has-text-color),
			.editor-block-list__layout .editor-block-list__block .wp-block-button.is-style-outline:hover .wp-block-button__link:not(.has-text-color),
			.editor-block-list__layout .editor-block-list__block .wp-block-button.is-style-outline:focus .wp-block-button__link:not(.has-text-color),
			.editor-block-list__layout .editor-block-list__block .wp-block-button.is-style-outline:active .wp-block-button__link:not(.has-text-color),
			.editor-block-list__layout .editor-block-list__block .wp-block-file .wp-block-file__textlink {
				color: hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness . ' ); /* base: #0073a8; */
			}

			.editor-block-list__layout .editor-block-list__block .wp-block-quote:not(.is-large):not(.is-style-large),
			.editor-styles-wrapper .editor-block-list__layout .wp-block-freeform blockquote {
				border-left: 2px solid hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness . ' ); /* base: #0073a8; */
			}

			.editor-block-list__layout .editor-block-list__block .wp-block-pullquote.is-style-solid-color:not(.has-background-color) {
				background-color: hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness . ' ); /* base: #0073a8; */
			}

			.editor-block-list__layout .editor-block-list__block .wp-block-file .wp-block-file__button,
			.editor-block-list__layout .editor-block-list__block .wp-block-button:not(.is-style-outline) .wp-block-button__link,
			.editor-block-list__layout .editor-block-list__block .wp-block-button:not(.is-style-outline) .wp-block-button__link:active,
			.editor-block-list__layout .editor-block-list__block .wp-block-button:not(.is-style-outline) .wp-block-button__link:focus,
			.editor-block-list__layout .editor-block-list__block .wp-block-button:not(.is-style-outline) .wp-block-button__link:hover {
				background-color: hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness . ' ); /* base: #0073a8; */
			}

			/* Hover colors */
			.editor-block-list__layout .editor-block-list__block a:hover,
			.editor-block-list__layout .editor-block-list__block a:active,
			.editor-block-list__layout .editor-block-list__block .wp-block-file .wp-block-file__textlink:hover {
				color: hsl( ' . $primary_color . ', ' . $saturation . ', ' . $lightness_hover . ' ); /* base: #005177; */
			}

			/* Do not overwrite solid color pullquote or cover links */
			.editor-block-list__layout .editor-block-list__block .wp-block-pullquote.is-style-solid-color a,
			.editor-block-list__layout .editor-block-list__block .wp-block-cover a {
				color: inherit;
			}
			';

		if ( function_exists( 'register_block_type' ) && is_admin() ) {
			$theme_css = $editor_css;
		}

		/**
		 * Filters  custom colors CSS.
		 *
		 * @since 0.2.0
		 * @param string $css           Base theme colors CSS.
		 * @param int    $primary_color The user's selected color hue.
		 * @param string $saturation    Filtered theme color saturation level.
		 */
		return apply_filters( $this->prefix . '_custom_colors_css', $theme_css, $primary_color, $saturation );
	}

}

